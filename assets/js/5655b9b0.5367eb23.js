"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[773],{6745:(r,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var o=n(4848),a=n(8453);const t={title:"9618_w22_qp_41 (2022 Nov 41)",sidebar_label:"9618_w22_qp_41"},i=void 0,l={id:"w22_qp_41/index",title:"9618_w22_qp_41 (2022 Nov 41)",description:"Resources:",source:"@site/docs/9618_w22_qp_41/index.md",sourceDirName:"9618_w22_qp_41",slug:"/w22_qp_41/",permalink:"/Cambridge-A-Level-Computer-Science-9618-4/docs/w22_qp_41/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"9618_w22_qp_41 (2022 Nov 41)",sidebar_label:"9618_w22_qp_41"},sidebar:"tutorialSidebar",previous:{title:"9618_s23_qp_42",permalink:"/Cambridge-A-Level-Computer-Science-9618-4/docs/s23_qp_42/"},next:{title:"9618_w22_qp_42",permalink:"/Cambridge-A-Level-Computer-Science-9618-4/docs/w22_qp_42/"}},s={},d=[{value:"Question 1",id:"question-1",level:2},{value:"Question 2",id:"question-2",level:2},{value:"Question 3",id:"question-3",level:2}];function u(r){const e={a:"a",code:"code",h2:"h2",li:"li",pre:"pre",ul:"ul",...(0,a.R)(),...r.components},{Details:t}=e;return t||function(r,e){throw new Error("Expected "+(e?"component":"object")+" `"+r+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"Resources:"}),(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(262).A+"",children:"Question Paper"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(8401).A+"",children:"Exam Resources"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsxs)(e.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(6617).A+"",children:["My Answers ",(0,o.jsx)(e.code,{children:"(evidence.doc)"})]})}),"\n"]})]}),"\n",(0,o.jsx)(e.h2,{id:"question-1",children:"Question 1"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'\r\n# a)\r\nDataArray = [] # 100 integers\r\n\r\n# b)\r\ndef ReadFile() -> None:\r\n    global DataArray\r\n    try:\r\n        with open("IntegerData.txt", "r", encoding="utf-8") as _file:\r\n            for line in _file.readlines():\r\n                try:\r\n                    DataArray.append(int(line.strip()))\r\n                except ValueError:\r\n                    print(f"{line.strip()} is not an integer in the text file. Skipping...")\r\n    except (IOError, FileNotFoundError):\r\n        print("File not found!")\r\n    except Exception as e:\r\n        print(f"Error: {e}")\r\n\r\n\r\n# c)\r\ndef FindValues() -> int:\r\n    global DataArray\r\n    while True:\r\n        value = input("[?] Enter a value to search for: ").strip().replace("_", "")\r\n        try:\r\n            if "." in value: # prevent the user from entering floats (decimal numbers)\r\n                raise ValueError\r\n            value = int(value)\r\n            break\r\n        except ValueError:\r\n            print("Please enter a valid integer!")\r\n        except Exception as e:\r\n            print(f"Error: {e}")\r\n    count = 0\r\n    for el in DataArray:\r\n        if value == el:\r\n            count += 1\r\n    \r\n    return count\r\n    \r\n# d) i)\r\nReadFile()\r\ncount = FindValues()\r\nprint(f"The number was found {count} times")\r\n\r\n# d) ii)\r\n# screenshot\r\n\r\n# e)\r\ndef BubbleSort():\r\n    global DataArray\r\n    n = len(DataArray)\r\n    for i in range (n-1):\r\n        for j in range(0, n-i-1):\r\n            if DataArray[j] > DataArray[j+1]:\r\n                DataArray[j], DataArray[j+1] = DataArray[j+1], DataArray[j]\r\n\r\nBubbleSort()\r\nprint(DataArray)\n'})}),"\n",(0,o.jsx)(e.h2,{id:"question-2",children:"Question 2"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'# a) i)\r\nimport typing\r\n\r\nclass Card:\r\n    def __init__(self, Number: int, Colour: typing.Literal["red", "blue", "yellow"]) -> None:\r\n        if not (1 <= Number <= 5):\r\n            raise ValueError("")\r\n        self.__Number = Number\r\n        self.__Colour = Colour\r\n\r\n    # a) ii)\r\n    def GetNumber(self) -> int:\r\n        return self.__Number\r\n\r\n    def GetColour(self) -> typing.Literal["red", "blue", "yellow"]:\r\n        return self.__Colour\r\n\r\n# a) iii)\r\nOneRed = Card(1, "red")\r\nTwoRed = Card(2, "red")\r\nThreeRed = Card(3, "red")\r\nFourRed = Card(4, "red")\r\nFiveRed = Card(5, "red")\r\n\r\nOneBlue = Card(1, "blue")\r\nTwoBlue = Card(2, "blue")\r\nThreeBlue = Card(3, "blue")\r\nFourBlue = Card(4, "blue")\r\nFiveBlue = Card(5, "blue")\r\n\r\nOneYellow = Card(1, "yellow")\r\nTwoYellow = Card(2, "yellow")\r\nThreeYellow = Card(3, "yellow")\r\nFourYellow = Card(4, "yellow")\r\nFiveYellow = Card(5, "yellow")\r\n\r\n# b) i)\r\nclass Hand:\r\n    def __init__(self, *args: Card) -> None:\r\n\r\n        self.__Cards: typing.List[Card] = list(args)[:5]\r\n\r\n        # or this, if we don\'t want to specify the type in *args\r\n        # ---\r\n        # self.__Cards: typing.List[Card]\r\n        # for arg in args: # only append objects of Card\r\n        #    if isinstance(arg, Card):\r\n        #        self.__Cards.append(arg)\r\n                \r\n        self.__FirstCard = 0\r\n        self.__NumberOfCards = len(self.__Cards)\r\n\r\n    # b) ii\r\n    def GetCard(self, idx) -> Card:\r\n        return self.__Cards[idx] \r\n\r\n# b) iii)\r\nPlayer1 = Hand(OneRed, TwoRed, ThreeRed, FourRed, OneYellow)\r\nPlayer2 = Hand(TwoYellow, ThreeYellow, FourYellow, FiveYellow, OneBlue)\r\n\r\n\r\n# c) i)\r\ndef CalculateValue(player: Hand) -> int:\r\n    score = 0\r\n    for i in range(0, 5):\r\n        cd = player.GetCard(idx=i)\r\n        score += cd.GetNumber()\r\n        col = cd.GetColour()\r\n        if col  == "red":\r\n            score += 5\r\n        elif col == "blue":\r\n            score += 10\r\n        elif col == "yellow":\r\n            score += 15\r\n    return score\r\n\r\n# c) ii)\r\nsp1 = CalculateValue(player=Player1)\r\nsp2 = CalculateValue(player=Player2)\r\nif sp1 == sp2:\r\n    print("It\'s a draw")\r\nelif sp1 > sp2:\r\n    print(f"Player 1 won by {sp1-sp2} marks.")\r\nelse:\r\n    print(f"Player 2 won by {sp2-sp1} marks.")\n'})}),"\n",(0,o.jsx)(e.h2,{id:"question-3",children:"Question 3"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'# a)\r\n# ArrayNodes = [[-1, -1, -1]] * 20\r\n\r\n# b)\r\nArrayNodes = [[1,20,5],[2,15,-1],[-1,3,3],[-1,9,4],[-1,10,-1],[-1,58,-1]]\r\nFreeNodes = 6\r\nRootPointer = 0\r\n\r\n\r\n# c)\r\ndef SearchValue(Root, ValueToFind):\r\n    global ArrayNodes\r\n    if Root == -1:\r\n        return -1\r\n    elif ArrayNodes[Root][1] == ValueToFind:\r\n        return Root\r\n    elif ArrayNodes[Root][1] == -1:\r\n        return -1\r\n    if ArrayNodes[Root][1] > ValueToFind:\r\n        return SearchValue(ArrayNodes[Root][0], ValueToFind)\r\n    if ArrayNodes[Root][1] < ValueToFind:\r\n        return SearchValue(ArrayNodes[Root][2], ValueToFind)\r\n\r\n\r\n# d) PLEASE LEARN THIS\r\n# I HAVE NO CLUE\r\n# PASTED BELOW IS THE ANSWER FROM THE MARKING SCHEME\r\ndef PostOrder(RootNode):\r\n    if RootNode[0] != -1:\r\n        PostOrder(ArrayNodes[RootNode[0]])\r\n    if RootNode[2] != -1:\r\n        PostOrder(ArrayNodes[RootNode[2]])\r\n    print(str(RootNode[1]))\r\n\r\n\r\n# e) i)\r\nReturnValue = SearchValue(RootPointer, 15)\r\nif ReturnValue == -1:\r\n    print("Not found")\r\nelse:\r\n    print("Found at " + str(ReturnValue))\r\nPostOrder(ArrayNodes[RootPointer])\n'})})]})}function c(r={}){const{wrapper:e}={...(0,a.R)(),...r.components};return e?(0,o.jsx)(e,{...r,children:(0,o.jsx)(u,{...r})}):u(r)}},262:(r,e,n)=>{n.d(e,{A:()=>o});const o=n.p+"assets/files/9618_w22_qp_41-7ed569daeaf8cdd454784fdcfb429f9e.pdf"},8401:(r,e,n)=>{n.d(e,{A:()=>o});const o=n.p+"assets/files/9618_w22_sf_41-66175615747512ef2f0aa6bafb3dd6be.zip"},6617:(r,e,n)=>{n.d(e,{A:()=>o});const o=n.p+"assets/files/evidence-321fbc9e1bc423d3df3cb2cb332aa409.doc"},8453:(r,e,n)=>{n.d(e,{R:()=>i,x:()=>l});var o=n(6540);const a={},t=o.createContext(a);function i(r){const e=o.useContext(t);return o.useMemo((function(){return"function"==typeof r?r(e):{...e,...r}}),[e,r])}function l(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(a):r.components||a:i(r.components),o.createElement(t.Provider,{value:e},r.children)}}}]);