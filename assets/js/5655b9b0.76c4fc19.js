"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[773],{6745:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>t,metadata:()=>i,toc:()=>d});var o=r(4848),a=r(8453);const t={title:"9618_w22_qp_41 (2022 Nov 41)",sidebar_label:"9618_w22_qp_41"},l=void 0,i={id:"w22_qp_41/index",title:"9618_w22_qp_41 (2022 Nov 41)",description:"Resources:",source:"@site/docs/9618_w22_qp_41/index.md",sourceDirName:"9618_w22_qp_41",slug:"/w22_qp_41/",permalink:"/docs/w22_qp_41/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"9618_w22_qp_41 (2022 Nov 41)",sidebar_label:"9618_w22_qp_41"},sidebar:"tutorialSidebar",previous:{title:"9618_s23_qp_42",permalink:"/docs/s23_qp_42/"},next:{title:"9618_w22_qp_42",permalink:"/docs/w22_qp_42/"}},s={},d=[{value:"Question 1",id:"question-1",level:2},{value:"Question 2",id:"question-2",level:2},{value:"Question 3",id:"question-3",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",li:"li",pre:"pre",ul:"ul",...(0,a.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"Resources:"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(262).A+"",children:"Question Paper"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(8401).A+"",children:"Exam Resources"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsxs)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(6617).A+"",children:["My Answers ",(0,o.jsx)(n.code,{children:"(evidence.doc)"})]})}),"\n"]})]}),"\n",(0,o.jsx)(n.h2,{id:"question-1",children:"Question 1"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'\n# a)\nDataArray = [] # 100 integers\n\n# b)\ndef ReadFile() -> None:\n    global DataArray\n    try:\n        with open("IntegerData.txt", "r", encoding="utf-8") as _file:\n            for line in _file.readlines():\n                try:\n                    DataArray.append(int(line.strip()))\n                except ValueError:\n                    print(f"{line.strip()} is not an integer in the text file. Skipping...")\n    except (IOError, FileNotFoundError):\n        print("File not found!")\n    except Exception as e:\n        print(f"Error: {e}")\n\n\n# c)\ndef FindValues() -> int:\n    global DataArray\n    while True:\n        value = input("[?] Enter a value to search for: ").strip().replace("_", "")\n        try:\n            if "." in value: # prevent the user from entering floats (decimal numbers)\n                raise ValueError\n            value = int(value)\n            break\n        except ValueError:\n            print("Please enter a valid integer!")\n        except Exception as e:\n            print(f"Error: {e}")\n    count = 0\n    for el in DataArray:\n        if value == el:\n            count += 1\n    \n    return count\n    \n# d) i)\nReadFile()\ncount = FindValues()\nprint(f"The number was found {count} times")\n\n# d) ii)\n# screenshot\n\n# e)\ndef BubbleSort():\n    global DataArray\n    n = len(DataArray)\n    for i in range (n-1):\n        for j in range(0, n-i-1):\n            if DataArray[j] > DataArray[j+1]:\n                DataArray[j], DataArray[j+1] = DataArray[j+1], DataArray[j]\n\nBubbleSort()\nprint(DataArray)\n'})}),"\n",(0,o.jsx)(n.h2,{id:"question-2",children:"Question 2"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'# a) i)\nimport typing\n\nclass Card:\n    def __init__(self, Number: int, Colour: typing.Literal["red", "blue", "yellow"]) -> None:\n        if not (1 <= Number <= 5):\n            raise ValueError("")\n        self.__Number = Number\n        self.__Colour = Colour\n\n    # a) ii)\n    def GetNumber(self) -> int:\n        return self.__Number\n\n    def GetColour(self) -> typing.Literal["red", "blue", "yellow"]:\n        return self.__Colour\n\n# a) iii)\nOneRed = Card(1, "red")\nTwoRed = Card(2, "red")\nThreeRed = Card(3, "red")\nFourRed = Card(4, "red")\nFiveRed = Card(5, "red")\n\nOneBlue = Card(1, "blue")\nTwoBlue = Card(2, "blue")\nThreeBlue = Card(3, "blue")\nFourBlue = Card(4, "blue")\nFiveBlue = Card(5, "blue")\n\nOneYellow = Card(1, "yellow")\nTwoYellow = Card(2, "yellow")\nThreeYellow = Card(3, "yellow")\nFourYellow = Card(4, "yellow")\nFiveYellow = Card(5, "yellow")\n\n# b) i)\nclass Hand:\n    def __init__(self, *args: Card) -> None:\n\n        self.__Cards: typing.List[Card] = list(args)[:5]\n\n        # or this, if we don\'t want to specify the type in *args\n        # ---\n        # self.__Cards: typing.List[Card]\n        # for arg in args: # only append objects of Card\n        #    if isinstance(arg, Card):\n        #        self.__Cards.append(arg)\n                \n        self.__FirstCard = 0\n        self.__NumberOfCards = len(self.__Cards)\n\n    # b) ii\n    def GetCard(self, idx) -> Card:\n        return self.__Cards[idx] \n\n# b) iii)\nPlayer1 = Hand(OneRed, TwoRed, ThreeRed, FourRed, OneYellow)\nPlayer2 = Hand(TwoYellow, ThreeYellow, FourYellow, FiveYellow, OneBlue)\n\n\n# c) i)\ndef CalculateValue(player: Hand) -> int:\n    score = 0\n    for i in range(0, 5):\n        cd = player.GetCard(idx=i)\n        score += cd.GetNumber()\n        col = cd.GetColour()\n        if col  == "red":\n            score += 5\n        elif col == "blue":\n            score += 10\n        elif col == "yellow":\n            score += 15\n    return score\n\n# c) ii)\nsp1 = CalculateValue(player=Player1)\nsp2 = CalculateValue(player=Player2)\nif sp1 == sp2:\n    print("It\'s a draw")\nelif sp1 > sp2:\n    print(f"Player 1 won by {sp1-sp2} marks.")\nelse:\n    print(f"Player 2 won by {sp2-sp1} marks.")\n'})}),"\n",(0,o.jsx)(n.h2,{id:"question-3",children:"Question 3"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'# a)\n# ArrayNodes = [[-1, -1, -1]] * 20\n\n# b)\nArrayNodes = [[1,20,5],[2,15,-1],[-1,3,3],[-1,9,4],[-1,10,-1],[-1,58,-1]]\nFreeNodes = 6\nRootPointer = 0\n\n\n# c)\ndef SearchValue(Root, ValueToFind):\n    global ArrayNodes\n    if Root == -1:\n        return -1\n    elif ArrayNodes[Root][1] == ValueToFind:\n        return Root\n    elif ArrayNodes[Root][1] == -1:\n        return -1\n    if ArrayNodes[Root][1] > ValueToFind:\n        return SearchValue(ArrayNodes[Root][0], ValueToFind)\n    if ArrayNodes[Root][1] < ValueToFind:\n        return SearchValue(ArrayNodes[Root][2], ValueToFind)\n\n\n# d) PLEASE LEARN THIS\n# I HAVE NO CLUE\n# PASTED BELOW IS THE ANSWER FROM THE MARKING SCHEME\ndef PostOrder(RootNode):\n    if RootNode[0] != -1:\n        PostOrder(ArrayNodes[RootNode[0]])\n    if RootNode[2] != -1:\n        PostOrder(ArrayNodes[RootNode[2]])\n    print(str(RootNode[1]))\n\n\n# e) i)\nReturnValue = SearchValue(RootPointer, 15)\nif ReturnValue == -1:\n    print("Not found")\nelse:\n    print("Found at " + str(ReturnValue))\nPostOrder(ArrayNodes[RootPointer])\n'})})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},262:(e,n,r)=>{r.d(n,{A:()=>o});const o=r.p+"assets/files/9618_w22_qp_41-7ed569daeaf8cdd454784fdcfb429f9e.pdf"},8401:(e,n,r)=>{r.d(n,{A:()=>o});const o=r.p+"assets/files/9618_w22_sf_41-66175615747512ef2f0aa6bafb3dd6be.zip"},6617:(e,n,r)=>{r.d(n,{A:()=>o});const o=r.p+"assets/files/evidence-321fbc9e1bc423d3df3cb2cb332aa409.doc"},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>i});var o=r(6540);const a={},t=o.createContext(a);function l(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);