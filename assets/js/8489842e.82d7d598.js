"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[845],{2167:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var t=r(4848),a=r(8453);const i={title:"9618_s23_qp_42 (2023 May 42)",sidebar_label:"9618_s23_qp_42"},l=void 0,o={id:"s23_qp_42/index",title:"9618_s23_qp_42 (2023 May 42)",description:"Resources:",source:"@site/docs/9618_s23_qp_42/index.md",sourceDirName:"9618_s23_qp_42",slug:"/s23_qp_42/",permalink:"/docs/s23_qp_42/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"9618_s23_qp_42 (2023 May 42)",sidebar_label:"9618_s23_qp_42"},sidebar:"tutorialSidebar",previous:{title:"9618_s23_qp_41",permalink:"/docs/s23_qp_41/"},next:{title:"9618_w22_qp_41",permalink:"/docs/w22_qp_41/"}},s={},u=[{value:"Question 1",id:"question-1",level:2},{value:"Question 2",id:"question-2",level:2},{value:"Question 3",id:"question-3",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",pre:"pre",ul:"ul",...(0,a.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Resources:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(9294).A+"",children:"Question Paper"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(9285).A+"",children:"Exam Resources"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsxs)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(4314).A+"",children:["My Answers ",(0,t.jsx)(n.code,{children:"(evidence.doc)"})]})}),"\n"]})]}),"\n",(0,t.jsx)(n.h2,{id:"question-1",children:"Question 1"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Started at 1:00\n\n# 1 (a)\nAnimals = [\'\']*10\n\n# (b)\nAnimals[0] = "horse"\nAnimals[1] = "lion"\nAnimals[2] = "rabbit"\nAnimals[3] = "mouse"\nAnimals[4] = "bird"\nAnimals[5] = "deer"\nAnimals[6] = "whale"\nAnimals[7] = "elephant"\nAnimals[8] = "kangaroo"\nAnimals[9] = "tiger"\n\n# (c)\ndef SortDescending():\n    """bubble sort in descending order for Animals list"""\n    global Animals\n    n = len(Animals)\n    for i in range(n):\n        for j in range(0, n-i-1):\n            if Animals[j][0] > Animals[j+1][0]:\n                Animals[j], Animals[j+1] = Animals[j+1], Animals[j]\n\n# (d)\ndef main():\n    global Animals\n    SortDescending()\n    for animal in Animals:\n        print(animal, end="\\n")\n\nif __name__ == "__main__":\n    main()\n    \n# Completed at 1:09\n    \n'})}),"\n",(0,t.jsx)(n.h2,{id:"question-2",children:"Question 2"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Started at 1:09\n\n# (a)\n# ---\nclass SaleData:\n    def __init__(self, id_="", quantity=-1):\n        self.id_ = id_\n        self.quantity = quantity\n    \n    def __repr__(self):\n        return f"<SaleData id=\'{self.id_}\' quantity={self.quantity}>"\n\n# (b)\nCircularQueue = [SaleData()]*5 # of 5 items to store the sale records\nHead = 0\nTail = 0\nNumberOfItems = 0\n\n# (c)\ndef Enqueue(RecordToAdd):\n    global CircularQueue, Head, Tail, NumberOfItems\n    if(NumberOfItems == 5):\n        return -1\n    else:\n        CircularQueue[Tail] = RecordToAdd\n        if(Tail == 4):\n            Tail = 0\n        else:\n            Tail +=1\n            NumberOfItems +=1\n        return 1\n\n# (d)\ndef Dequeue():\n    global CircularQueue, Head, Tail, NumberOfItems\n    \n    if NumberOfItems == 0:\n        return SaleData()\n    \n    record = CircularQueue[Head]\n\n    # PLEASE REMEMBER THIS\n    Head = (Head + 1) % len(CircularQueue)  # Circular increment\n    NumberOfItems -= 1\n    \n    return record\n\n# (e)\ndef EnterRecord():\n    id_ = input("Enter ID: ")\n    quantity = input("Enter Quantity: ")\n    r = Enqueue(SaleData(id_=id_, quantity=quantity))\n    if r == -1:\n        print("Full")\n    else:\n        print("Stored")\n\n# (f)\ndef main():\n    for _ in range(0, 6):\n        EnterRecord()\n    dequeued_record = Dequeue()\n    if dequeued_record.id_ == "":\n        print("No items")\n    else:\n        print(f"De-Queued element: {dequeued_record}")\n    EnterRecord()\n    for i in CircularQueue:\n        print(i)\n    \nif __name__ == "__main__":\n    main()\n\n# Completed at 1:40\n# my Enqueue() function was wrong. PLEASE LEARN MORE LATER.\n'})}),"\n",(0,t.jsx)(n.h2,{id:"question-3",children:"Question 3"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Started at 1:45\n\n# (a)\nclass Employee:\n    # self.__HourlyPay is a float\n    # self.__EmployeeNumber is a string\n    # self.__JobTitle is a string\n    # self.__PayYear2022 is an array of length 52 consisting of floats\n    \n    def __init__(self, HourlyPay, EmployeeNumber, JobTitle):\n        self.__HourlyPay: float = HourlyPay\n        self.__EmployeeNumber: str = EmployeeNumber\n        self.__JobTitle: str = JobTitle\n        self.__PayYear2022: str[float] = [0.00]*52 # 52 elements from index 0 to 51\n\n    # (a) ii)\n    def GetEmployeeNumber(self):\n        return self.__EmployeeNumber\n    \n    # (a) iii)\n    def SetPay(self, WeekNumber, NoOfHours):\n        if (WeekNumber < 0) or (WeekNumber > 52):\n            raise ValueError("Invalid `WeekNumber`. Week Number is out of range. It should be between 0-52")\n        # PLEASE remember to sub 1 from the index. human to index conversion thing\n        self.__PayYear2022[WeekNumber-1] = self.__HourlyPay * NoOfHours\n\n    # (a) iv)\n    def GetTotalPay(self):\n        total = 0\n        for week in self.__PayYear2022:\n            total += week\n        return total\n\n# (b)\nclass Manager(Employee):\n    # self.__BonusValue is a float\n    def __init__(self, HourlyPay, EmployeeNumber, JobTitle, BonusValue):\n        super().__init__(HourlyPay, EmployeeNumber, JobTitle)\n        self.__BonusValue = BonusValue\n    \n    def SetPay(self, WeekNumber, NoOfHours):\n        NoOfHours = NoOfHours * (1 + (self.__BonusValue/100)) # from IGCSE Maths\n        return super().SetPay(WeekNumber, NoOfHours)\n\n# (c)\n\n# EmployeeArray is array/list of Employee or Manager\nEmployeeArray: list[Employee | Manager] = []*8 # from index 0 to 7\ntry:\n    with open("Employees.txt", "r", encoding="utf-8") as _file:\n        for i in range(0,8): # EmployeeArray\n            hp = float(_file.readline())\n            en = _file.readline().strip()           # THIS DOESNT WORK WHEN float(). I DONT KNOW WHY\n            tmp = _file.readline()\n            try:\n                bs = float(tmp)\n                tl = _file.readline()\n                EmployeeArray.append(Manager(HourlyPay=hp,EmployeeNumber=en,JobTitle=tl,BonusValue=bs))\n            except ValueError:\n                EmployeeArray.append(Employee(HourlyPay=hp, EmployeeNumber=en, JobTitle=tmp))\nexcept (FileNotFoundError, IOError):\n    print("File: Employee.txt not found!")\n\ndef EnterHours():\n    try:\n        with open("HoursWeek1.txt", "r", encoding="utf-8") as f:\n            for _ in range(0,8): # EmployeeArray\n                en = f.readline()\n                hrs = f.readline()\n                for element  in EmployeeArray:\n                    if element.GetEmployeeNumber() == en:\n                        element.SetPay(1, float(hrs)) # week 1, no. of hours per week 1\n    except (FileNotFoundError, IOError):\n        print("File: Employee.txt not found!")\n\nEnterHours()\nfor element in EmployeeArray:\n    print(f"{element.GetEmployeeNumber()} - {element.GetTotalPay()}")\n\n# Completed at 2:26\n'})})]})}function f(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},4314:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/files/evidence-73e938ef08fc232d9f544ad9306d8fd7.doc"},9294:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/files/9618_s23_qp_42-cbfcd08e9ce1da7247455e5b82f07f9a.pdf"},9285:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/files/9618_s23_sf_42-ee0d2818c0222d1b930a5343184afab8.zip"},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>o});var t=r(6540);const a={},i=t.createContext(a);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);