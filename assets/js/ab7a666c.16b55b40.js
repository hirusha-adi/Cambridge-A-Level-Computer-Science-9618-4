"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[715],{372:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var t=r(4848),i=r(8453);const o={title:"9618_w22_qp_42 (2022 Nov 42)",sidebar_label:"9618_w22_qp_42"},a=void 0,s={id:"w22_qp_42/index",title:"9618_w22_qp_42 (2022 Nov 42)",description:"Resources:",source:"@site/docs/9618_w22_qp_42/index.md",sourceDirName:"9618_w22_qp_42",slug:"/w22_qp_42/",permalink:"/Cambridge-A-Level-Computer-Science-9618-4/docs/w22_qp_42/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"9618_w22_qp_42 (2022 Nov 42)",sidebar_label:"9618_w22_qp_42"},sidebar:"tutorialSidebar",previous:{title:"9618_w22_qp_41",permalink:"/Cambridge-A-Level-Computer-Science-9618-4/docs/w22_qp_41/"},next:{title:"9618_w23_qp_41",permalink:"/Cambridge-A-Level-Computer-Science-9618-4/docs/w23_qp_41/"}},l={},d=[{value:"Question 1",id:"question-1",level:2},{value:"Question 2",id:"question-2",level:2},{value:"Question 3",id:"question-3",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",pre:"pre",ul:"ul",...(0,i.R)(),...e.components},{Details:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o,{children:[(0,t.jsx)("summary",{children:"Resources:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(2156).A+"",children:"Question Paper"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(2859).A+"",children:"Exam Resources"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsxs)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(9806).A+"",children:["My Answers ",(0,t.jsx)(n.code,{children:"(evidence.doc)"})]})}),"\n"]})]}),"\n",(0,t.jsx)(n.h2,{id:"question-1",children:"Question 1"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'\n# a)\nJobs = [] # global 2 dimentional array of type integer, 100 by 2 elements\nNumberOfJobs = 0 # global integer\n\n# b)\ndef Initialise():\n    global Jobs\n    global NumberOfJobs\n    for i in range(0, 100):\n        Jobs.append([-1, -1])\n    NumberOfJobs = 0\n\n# c)\ndef AddJob(JobNumber, Priority):\n    global Jobs\n    global NumberOfJobs\n    if NumberOfJobs == 100:\n        print("Not added") # our array is full\n    else:\n        Jobs[NumberOfJobs] = [JobNumber, Priority]\n        print("Added")\n        NumberOfJobs += 1\n\n# d)\nInitialise()\nAddJob(12, 10)\nAddJob(526, 9)\nAddJob(33, 8)\nAddJob(12, 9)\nAddJob(78, 1)\n\n# e)\n# PLEASE TAKE A LOOK AT THIS AGAIN\n# since i have no idea about this, in the exam,\n# use something like .sort() and continue to get marks for the others\n# and also the final mark for the screen shot\ndef InsertionSort():\n     global Jobs\n     global NumberOfJobs\n     for I in range(1, NumberOfJobs):\n         Current1 = Jobs[I][0]\n         Current2 = Jobs[I][1]\n         while I > 0 and Jobs[I-1][1] > Current2:\n             Jobs[I][0] = Jobs[I-1][0]\n             Jobs[I][1] = Jobs[I-1][1]\n             I = I - 1\n         Jobs[I][0] = Current1\n         Jobs[I][1] = Current2\n# marks are given as follows:\n# Procedure header (and end where appropriate)\n# \u2022 Outer loop through all 5 elements / number of jobs \u2026\n# \u2022 \u2026 inner loop through array elements \u2026\n# \u2022 \u2026and comparing priority (second index) \u2026\n# \u2022 \u2026moving the elements up and inserting correctly\n\n\n# f)\ndef PrintArray():\n    global Jobs\n    global NumberOfJobs\n    for i in range(0, NumberOfJobs):\n        element = Jobs[i]\n        print(f"{element[0]} priority {element[1]}")\n\n# g) i)\nInsertionSort()\nPrintArray()\n\n'})}),"\n",(0,t.jsx)(n.h2,{id:"question-2",children:"Question 2"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# a)\nimport typing # for type hinting\n\nclass Character:\n    def __init__(self, Name: str, XCoordinate: int, YCoordinate: int) -> None:\n        self.__Name: str = Name\n        self.__XCoordinate: int = XCoordinate\n        self.__YCoordinate: int = YCoordinate\n    \n    # b)\n    def GetName(self) -> str:\n        return self.__Name\n\n    def GetX(self) -> int:\n        return self.__XCoordinate\n\n    def GetY(self) -> int:\n        return self.__YCoordinate\n\n    # c)\n    def ChangePosition(self, XChange: int = 0, YChange: int = 0) -> None:\n        self.__XCoordinate += XChange\n        self.__YCoordinate += YChange\n\n# d)\nCharacters: typing.List[Character] = []\nNoCharacters: int = 10\ntry:\n    with open("Characters.txt", "r", encoding="utf-8") as _file:\n        for i in range(0, NoCharacters):\n            Name = _file.readline().strip()\n            XCoordinate = int(_file.readline().strip())\n            YCoordinate = int(_file.readline().strip())\n            Characters.append(\n                    Character(\n                            Name=Name,\n                            XCoordinate=XCoordinate,\n                            YCoordinate=YCoordinate\n                        )\n                )\n\nexcept (IOError, FileNotFoundError):\n    print("File not found!")\nexcept Exception as e:\n    print(f"Error: {e}")\n\n\n# e)\nSearchedUserIndex: int = -1\nwhile True:\n    UCharName = input("[?] Enter character name: ").strip()\n    for i in range(0, 10):\n        if UCharName == Characters[i].GetName():\n            SearchedUserIndex = i\n            break\n    else:\n        print("Please enter a valid name!")\n        continue\n    break\n\n# f)\nwhile True:\n    ULetter = input("[?] Enter letter to change position [A/W/S/D]: ").lower().strip()\n    if ULetter == "a":\n        Characters[SearchedUserIndex].ChangePosition(XChange=-1, YChange=0)\n        break\n    elif ULetter == "w":\n        Characters[SearchedUserIndex].ChangePosition(XChange=0, YChange=1)\n        break\n    elif ULetter == "s":\n        Characters[SearchedUserIndex].ChangePosition(XChange=0, YChange=-1)\n        break\n    elif ULetter == "d":\n        Characters[SearchedUserIndex].ChangePosition(XChange=1, YChange=0)\n        break\n    else:\n        print("Please enter a valid letter! [A/W/S/D]")\n\n\n# g) i)\nprint(f"{Characters[SearchedUserIndex].GetName()} has changed coordinates to X = {Characters[SearchedUserIndex].GetX()} and Y = {Characters[SearchedUserIndex].GetY()}")\n\n\n# g) ii\n# screenshot\n\n'})}),"\n",(0,t.jsx)(n.h2,{id:"question-3",children:"Question 3"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# a)\nQueue = [-1]*100 # integer\nHeadPointer = -1 # integer\nTailPointer = 0 # integer\n\n# b) PLEASE REMEBER THIS FOR THE EXAM\ndef Enqueue(value) -> bool:\n    global Queue, HeadPointer, TailPointer\n    if TailPointer < 100:\n        if HeadPointer == -1:\n            HeadPointer = 0\n        Queue[TailPointer] = value\n        TailPointer = TailPointer + 1\n        return True\n    return False\n\n# c)\nfor num in range(1, 21):\n    status = Enqueue(value=num)\nif status:\n    print("Successful")\nelse:\n    print("Unsuccessful")\n\n# d)\ndef ResucrsiveOutput(start: int) -> int:\n    global Queue\n    \n    # base condition\n    if start == 0:\n        return Queue[start]\n    # recursive condition\n    else:\n        return Queue[start] + ResucrsiveOutput(start-1)\n\n# e) i)\nprint(ResucrsiveOutput(TailPointer-1))\n\n\n'})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},2156:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/files/9618_w22_qp_42-f540a1fb048e7cea6844b360abb0fdb9.pdf"},2859:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/files/9618_w22_sf_42-0677b222eb528f7aa3823353bad0ee14.zip"},9806:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/files/evidence-fdb1b3dfeb8ee0d38f564bf27b0f1155.doc"},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var t=r(6540);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);