"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[769],{9884:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var t=e(4848),i=e(8453);const a={title:"9618_s21_qp_41 (2021 May 41)",sidebar_label:"9618_s21_qp_41"},s=void 0,o={id:"s21_qp_41/index",title:"9618_s21_qp_41 (2021 May 41)",description:"Resources:",source:"@site/docs/9618_s21_qp_41/index.md",sourceDirName:"9618_s21_qp_41",slug:"/s21_qp_41/",permalink:"/Cambridge-A-Level-Computer-Science-9618-4/docs/s21_qp_41/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"9618_s21_qp_41 (2021 May 41)",sidebar_label:"9618_s21_qp_41"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/Cambridge-A-Level-Computer-Science-9618-4/docs/"},next:{title:"9618_s21_qp_42",permalink:"/Cambridge-A-Level-Computer-Science-9618-4/docs/s21_qp_42/"}},d={},l=[{value:"Question 1",id:"question-1",level:2},{value:"Question 2",id:"question-2",level:2},{value:"Question 3",id:"question-3",level:2}];function u(n){const r={a:"a",code:"code",h2:"h2",li:"li",pre:"pre",ul:"ul",...(0,i.R)(),...n.components},{Details:a}=r;return a||function(n,r){throw new Error("Expected "+(r?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(a,{children:[(0,t.jsx)("summary",{children:"Resources:"}),(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:e(4292).A+"",children:"Question Paper"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:e(3783).A+"",children:"Exam Resources"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:e(3582).A+"",children:["My Answers ",(0,t.jsx)(r.code,{children:"(evidence.doc)"})]})}),"\n"]})]}),"\n",(0,t.jsx)(r.h2,{id:"question-1",children:"Question 1"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:'# a)\r\nclass node:\r\n    def __init__(self, data: int,nextNode: int) -> None:\r\n        self.data = data\r\n        self.nextNode = nextNode\r\n\r\n# b)\r\nstartPointer = 0\r\nemptyList = 5    \r\nlinkedList: list[node] = [\r\n    node(1, 1), # index 0\r\n    node(5, 4),\r\n    node(6, 7),\r\n    node(7, -1),\r\n    node(2, 2),\r\n    node(0, 6),\r\n    node(0, 8),\r\n    node(56, 3),\r\n    node(0, 9),\r\n    node(0, -1) # index 9\r\n]\r\n\r\n# c) i)\r\ndef outputNodes(linkedList, currentPointer):\r\n    while currentPointer != -1:\r\n        print(linkedList[currentPointer].data)\r\n        # print(linkedList[currentPointer].data, f"is at index: {currentPointer}")\r\n        currentPointer = linkedList[currentPointer].nextNode\r\n\r\n# outputNodes(linkedList=linkedList, currentPointer=startPointer)\r\n\r\n# c) ii)\r\n"""\r\n> python .\\Question1.py\r\n1\r\n5\r\n2\r\n6\r\n56\r\n7\r\n"""\r\n\r\n\r\n# d) i)\r\ndef addNode(linkedList, currentPointer, emptyList):\r\n    \r\n    avialable_idx = []\r\n    for i in range(0, 10):\r\n        avialable_idx.append(i)\r\n    if (emptyList < 0) or (emptyList > 9):\r\n        return False\r\n    else:\r\n        uinp = input("Enter the data to add: ")\r\n        previousLastIdx = None\r\n        while currentPointer != -1:\r\n            avialable_idx.remove(currentPointer)\r\n            previousLastIdx = currentPointer\r\n            # print(linkedList[currentPointer].data, f"is at index: {currentPointer}")\r\n            currentPointer = linkedList[currentPointer].nextNode\r\n        if len(avialable_idx) == 0:\r\n            return False\r\n        linkedList[avialable_idx[0]] = node(data=int(uinp), nextNode=-1)\r\n        linkedList[previousLastIdx].nextNode = avialable_idx[0]\r\n        return True\r\n        \r\n# d) ii)\r\n# enter \'5\' as the input\r\noutputNodes(linkedList=linkedList, currentPointer=startPointer)\r\nprint("="*5)\r\nr = addNode(linkedList=linkedList, currentPointer=startPointer, emptyList=emptyList)\r\nif r:\r\n    print("Item added successfully!")\r\nelse:\r\n    print("Cannot add item. LinkedList is already full.")\r\nprint("="*5)\r\noutputNodes(linkedList=linkedList, currentPointer=startPointer)\r\n\r\n\r\n# d) iii)\r\n"""\r\n> python .\\Question1.py\r\n1\r\n5\r\n2\r\n6\r\n56\r\n7\r\n=====\r\nEnter the data to add: 5\r\nItem added successfully!\r\n=====\r\n1\r\n5\r\n2\r\n6\r\n56\r\n7\r\n5\r\n"""\n'})}),"\n",(0,t.jsx)(r.h2,{id:"question-2",children:"Question 2"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:'# a)\r\narrayData = [10, 5, 6, 7, 1, 12, 13, 15, 21, 8]\r\n\r\n# b) i)\r\ndef linearSearch(search_for: int) -> bool:\r\n    global arrayData\r\n    for element in arrayData:\r\n        if search_for == element:\r\n            return True\r\n    return False\r\n\r\n# b) ii)\r\nwhile True:\r\n    try:\r\n        value = input("[?] Input an integer: ")\r\n        if "." in value:    # if decimal number\r\n            raise ValueError\r\n        value = int(value)\r\n        break\r\n    except ValueError:\r\n        print("[!!] Please enter a valid integer!")\r\n        \r\n# print(value, type(value))\r\nis_found = linearSearch(search_for=value)\r\nif is_found:\r\n    print(f"[+] Found {value} in array `arrayData`")\r\nelse:\r\n    print(f"[-] Not found {value} in array `arrayData`")\r\n    \r\n# d) iii)\r\n\r\n"""\r\n> python .\\Question2.py\r\n[?] Input an integer: 99\r\n[-] Not found 99 in array `arrayData`\r\n\r\n> python .\\Question2.py\r\n[?] Input an integer: 5\r\n[+] Found 5 in array `arrayData`\r\n"""\r\n\r\n# c)\r\ndef bubbleSort():\r\n    global arrayData\r\n    for i in range(len(arrayData)):\r\n        for j in range(len(arrayData)-i-1):\r\n            if arrayData[j] > arrayData[j+1]:\r\n                arrayData[j], arrayData[j+1] = arrayData[j+1], arrayData[j]\r\n\r\nprint("[+] Original Array: ", arrayData)\r\nbubbleSort()\r\nprint("[+] Sorted Array: ", arrayData)\r\n\n'})}),"\n",(0,t.jsx)(r.h2,{id:"question-3",children:"Question 3"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:'# REMEMBER THE READING FROM FILE THING\r\n\r\nclass TreasureChest:\r\n    def __init__(self, question: str, answer: int, points: int) -> None:\r\n        self.__question = question\r\n        self.__answer = answer\r\n        self.__points = points\r\n\r\n    def __repr__(self):\r\n        return f"<TreasureChest question=\'{self.__question}\' answer={self.__answer} points={self.__points}>"        \r\n    \r\n    def getQuestion(self) -> str:\r\n        return self.__question\r\n    \r\n    def checkAnswer(self, answer: int) -> bool:\r\n        if answer == self.__answer:\r\n            return True\r\n        return False\r\n\r\n    def getPoints(self, attempts: int):\r\n        if attempts == 1:\r\n            return self.__points\r\n        elif attempts == 2:\r\n            return (self.__points//2)\r\n        elif attempts in (3, 4):\r\n            return (self.__points//4)\r\n        else:\r\n            return 0\r\n        \r\narrayTreasure: list[TreasureChest] = []\r\ndef readData():\r\n    arrayTreasure\r\n    try:\r\n        with open("TreasureChestData.txt", "r", encoding=\'utf-8\') as _file:\r\n            lines = _file.readlines()\r\n            for i in range(0, len(lines), 3): # reading 3 lines at a time\r\n                arrayTreasure.append(TreasureChest(\r\n                    question=lines[i].strip(),\r\n                    answer=int(lines[i+1].strip()),\r\n                    points=int(lines[i+2].strip())\r\n                ))\r\n    except (FileNotFoundError, IOError):\r\n        print("File not found in current working directory!")\r\n    # print(arrayTreasure)\r\n\r\n\r\nreadData()\r\nwhile True:\r\n    question_index = input("[?] Enter a question number between 1-5: ")\r\n    try:\r\n        if "." in question_index:\r\n            raise ValueError \r\n        question_index = int(question_index)\r\n        if not(question_index in [1, 2, 3, 4, 5]):\r\n            raise ValueError \r\n        question_index -= 1 # fix index from normal 1-5 to 0-4 as in array\r\n        break\r\n    except ValueError:\r\n        print("Please enter a valid input.") \r\nobj = arrayTreasure[question_index]\r\ncount = 1\r\nwhile True:\r\n    print("[?] Question: ", obj.getQuestion())\r\n    answer = int(input("[?] >> "))\r\n    is_correct = obj.checkAnswer(answer=answer)\r\n    if is_correct:\r\n        points = obj.getPoints(attempts=count)\r\n        print(f"[+] Points Scored: {points}")\r\n        break\r\n    print("[-] Incorrect Answer. Please retry!\\n")\r\n    count += 1\r\n    \r\n    \r\n"""\r\n> python .\\Question3.py\r\n[?] Enter a question number between 1-5: 1\r\n[?] Question:  2*2\r\n[?] >> 4\r\n[+] Points Scored: 10\r\n\r\n> python .\\Question3.py\r\n[?] Enter a question number between 1-5: 5\r\n[?] Question:  3000+4000\r\n[?] >> 8980\r\n[-] Incorrect Answer. Please retry!\r\n\r\n[?] Question:  3000+4000\r\n[?] >> 7000\r\n[+] Points Scored: 9\r\n"""\n'})})]})}function c(n={}){const{wrapper:r}={...(0,i.R)(),...n.components};return r?(0,t.jsx)(r,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},3582:(n,r,e)=>{e.d(r,{A:()=>t});const t=e.p+"assets/files/evidence-12d5f1d986e870accda63123984d047d.doc"},4292:(n,r,e)=>{e.d(r,{A:()=>t});const t=e.p+"assets/files/9618_s21_qp_41-e47cdd90744a1ae6bf57273360251643.pdf"},3783:(n,r,e)=>{e.d(r,{A:()=>t});const t=e.p+"assets/files/9618_s21_sf_41-3ac63a87855fffc9e6a979e533efe5bf.zip"},8453:(n,r,e)=>{e.d(r,{R:()=>s,x:()=>o});var t=e(6540);const i={},a=t.createContext(i);function s(n){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function o(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),t.createElement(a.Provider,{value:r},n.children)}}}]);